// Generated by CoffeeScript 2.3.0
var assertValid, exec, git, optionTypes;

assertValid = require("assertValid");

exec = require("exec");

require("./getBranch");

require("./hasBranch");

require("./isClean");

git = require("./core");

optionTypes = {
  force: "boolean?",
  ifExists: "boolean?",
  mustExist: "boolean?"
};

module.exports = git.setBranch = async function(repo, branch, opts = {}) {
  var args, currentBranch, err, msg;
  assertValid(repo, "string");
  assertValid(branch, "string");
  assertValid(opts, optionTypes);
  currentBranch = (await git.getBranch(repo));
  if (branch === currentBranch) {
    return branch;
  }
  if (!opts.force && !(await git.isClean(repo))) {
    throw Error("The current branch has uncommitted changes!");
  }
  args = [branch];
  if (!(await git.hasBranch(repo, branch))) {
    if (opts.ifExists) {
      return currentBranch;
    }
    if (opts.mustExist) {
      throw Error(`Unknown branch: '${branch}'`);
    }
    args.unshift("-b");
  }
  try {
    await exec("git checkout", args, {
      cwd: repo
    });
    return branch;
  } catch (error1) {
    err = error1;
    msg = err.message;
    // 'git checkout' incorrectly prints to 'stderr'
    if (msg.startsWith("Switched to branch")) {
      return branch;
    }
    if (msg.startsWith("Switched to a new branch")) {
      return branch;
    }
    throw error;
  }
};
