// Generated by CoffeeScript 2.3.0
var MergeStrategy, assertValid, commitTypes, exec, git, isValid, optionTypes, valido;

assertValid = require("assertValid");

isValid = require("isValid");

valido = require("valido");

exec = require("exec");

MergeStrategy = require("./MergeStrategy");

require("./isClean");

git = require("./core");

commitTypes = valido([
  "string",
  {
    from: "string",
    to: "string"
  }
]);

optionTypes = {
  strategy: [MergeStrategy, "?"]
};

module.exports = git.pick = async function(repo, commit, opts = {}) {
  var args, clean, err;
  assertValid(repo, "string");
  assertValid(commit, commitTypes);
  assertValid(opts, optionTypes);
  args = isValid(commit, "object") ? [commit.from + ".." + commit.to] : [commit];
  if (opts.strategy) {
    args.push("-X", opts.strategy);
  }
  try {
    await exec("git cherry-pick", args, {
      cwd: repo
    });
    clean = (await git.isClean(repo));
  } catch (error) {
    err = error;
    if (!(clean = /error: could not apply/.test(err.message))) {
      throw err;
    }
  }
  if (!clean) {
    await exec("git cherry-pick --continue", {
      cwd: repo
    });
  }
};
