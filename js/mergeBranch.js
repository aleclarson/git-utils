// Generated by CoffeeScript 1.12.4
var MergeStrategy, Promise, assertValid, exec, git, optionTypes;

assertValid = require("assertValid");

Promise = require("Promise");

exec = require("exec");

MergeStrategy = require("./MergeStrategy");

require("./isClean");

require("./getBranch");

require("./setBranch");

git = require("./core");

optionTypes = {
  ours: "string?",
  theirs: "string",
  strategy: [MergeStrategy, "?"]
};

module.exports = git.mergeBranch = function(modulePath, options) {
  var startBranch;
  assertValid(modulePath, "string");
  assertValid(options, optionTypes);
  startBranch = null;
  return git.isClean(modulePath).assert("The current branch cannot have any uncommitted changes!").then(function() {
    return git.getBranch(modulePath).then(function(currentBranch) {
      return startBranch = currentBranch;
    });
  }).then(function() {
    if (!options.ours) {
      return;
    }
    return git.setBranch(modulePath, options.ours);
  }).then(function() {
    var args;
    args = [options.theirs, "--no-commit", "--no-ff"];
    if (options.strategy) {
      args.push("-X", options.strategy);
    }
    return exec.async("git merge", args, {
      cwd: modulePath
    }).fail(function(error) {
      if (/Automatic merge went well/.test(error.message)) {
        return;
      }
      throw error;
    });
  }).always(function() {
    if (!options.ours) {
      return;
    }
    return git.setBranch(modulePath, startBranch);
  });
};
